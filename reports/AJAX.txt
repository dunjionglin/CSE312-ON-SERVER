AJAX is Asynchronous JavaScript and XML that is built-in with browsers to request data from a web server and display or use data without refreshing the page. In our project, we are using jQueryâ€™s ajax module. (https://api.jquery.com/jQuery.ajax/)

This technology allows our clients to send data to server and server to send back data to client without refreshing the page to see the newest comments or interactions.

This is accomplished by AJAX Requests (GET and POST)

For getting data from the server, client-side will generate GET requests to accomplish it. GET requests will mostly be done by browsers, which browser will properly format the HTTP header content and send to the server. Realtime information updates will be handled by .ajax() GET request.

For sending data to the server, client-side will generate POST requests to accomplish it. POST requests will mostly be done by .ajax() to send data to the server with proper HTTP header.

These two requests will be done in a very similar way in .ajax(). Which takes in a key-value pairs for each keywords, such as url, content Type, success and so on First, the url parameter has a type of string to take in a path that we want the client to send the information to, with POST for the request type, and content type for the data to be sent. Which data needs to be a PlainObject (zero or more key-value pairs) or String or Array, then data will be processed based on input type. For PlainObject, it will process { a: "bc", d: "e,f" } into "a=bc&d=e%2Cf" with default setting (set processData to false to turn this off). For array, it will serialize values with the same key based on the value of the traditional setting, { a: [1,2] } becomes the string "a%5B%5D=1&a%5B%5D=2" with the default traditional: false setting. For string, it should be already encoded using the correct encoding for the content type. For json and jsonp contain double question marks in URL or single question mark in query. It will be replaced by a value generated by jQuery (unique for each copy of the library) . Then .ajax() will format those data into HTTP requests with the correct header and body to send to the server. Note: if the method can not have entity body (GET), the data will be appended to the URL.

Option: the success key in the .ajax() could be used to provide confirmation for clients that data is sent to the server. By giving data for the first parameter, and with two other parameters, one string describing the statues and jqXHR object for a list of functions to be called in turn. By checking does the request succeed and do future action based on succeed.

This is the sample code we used to build GET and POST requests for our application:

$.ajax({
 method: "GET",
 url: "test.js",
 dataType: "script"
});

Licenses: (https://jquery.org/license/)
MIT license for source code and web sites, CC0 for sample code.
